{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"brianlee1914@me.com\",\n    verificationCode: \"4kvcfycbhww\",\n+   createdAt: DateTime\n  }\n}\n\nArgument `createdAt` is missing."}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"brianlee1914@me.com\",\n    verificationCode: \"4kvcfycbhww\",\n    created_at: new Date(\"1970-01-20T16:11:14.752Z\"),\n+   createdAt: DateTime\n  }\n}\n\nArgument `createdAt` is missing."}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"brianlee1914@me.com\",\n    verificationCode: \"4kvcfycbhww\",\n    createdAt: new Date(\"1970-01-20T16:11:14.845Z\"),\n+   updatedAt: DateTime\n  }\n}\n\nArgument `updatedAt` is missing."}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"brianlee1914@me.com\",\n    verificationCode: \"4kvcfycbhww\",\n+   createdAt: DateTime\n  }\n}\n\nArgument `createdAt` is missing."}
{"level":"error","message":"\nInvalid `prisma.users.create()` invocation:\n\n{\n  data: {\n    email: \"brianlee1914@me.com\",\n    verificationCode: \"4kvcfycbhww\",\n+   createdAt: DateTime\n  }\n}\n\nArgument `createdAt` is missing."}
{"level":"error","message":"req.json is not a function"}
{"level":"error","message":"req.json is not a function"}
{"level":"error","message":"req.json is not a function"}
{"level":"error","message":"body is not defined"}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   status: notices_status\n  }\n}\n\nArgument `status` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   status: notices_status\n  }\n}\n\nArgument `status` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   status: notices_status\n  }\n}\n\nArgument `status` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   StartDate: DateTime\n  }\n}\n\nArgument `StartDate` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   StartDate: DateTime\n  }\n}\n\nArgument `StartDate` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.create()` invocation:\n\n{\n  data: {\n    subject: \"subject1\",\n    contents: \"contents1\",\n+   StartDate: DateTime\n  }\n}\n\nArgument `StartDate` is missing."}
{"level":"error","message":"data and hash arguments required"}
{"level":"error","message":"data and hash arguments required"}
{"level":"error","message":"Cannot read properties of undefined (reading 'authorization')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"id is not defined"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"\nInvalid `prisma.notices.findFirst()` invocation:\n\n{\n  where: {\n+   id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `id` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.findFirst()` invocation:\n\n{\n  where: {\n+   id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  }\n}\n\nArgument `id` is missing."}
{"level":"error","message":"Cannot read properties of undefined (reading 'headers')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'headers')"}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: {}\n  },\n  data: undefined\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: {}\n  },\n  data: undefined\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: {}\n  },\n  data: undefined\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: {}\n  },\n  data: {\n    subject: undefined,\n    contents: undefined,\n    status: undefined,\n    StartDate: undefined,\n    EndDate: undefined\n  }\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    subject: undefined,\n    contents: undefined,\n    status: undefined,\n    StartDate: undefined,\n    EndDate: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    status: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    status: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    status: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    status: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  },\n  data: {\n    status: undefined\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: {}\n  },\n  data: undefined\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: undefined\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"Cannot convert undefined or null to object"}
{"level":"error","message":"Cannot convert undefined or null to object"}
{"level":"error","message":"\nInvalid `prisma.notices.delete()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"\nInvalid `prisma.notices.delete()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"\nInvalid `prisma.notices.findUnique()` invocation:\n\n{\n  where: {\n    id: undefined,\n?   AND?: noticesWhereInput | noticesWhereInput[],\n?   OR?: noticesWhereInput[],\n?   NOT?: noticesWhereInput | noticesWhereInput[],\n?   subject?: StringFilter | String,\n?   contents?: StringFilter | String,\n?   status?: Enumnotices_statusFilter | notices_status,\n?   user_id?: IntNullableFilter | Int | Null,\n?   StartDate?: DateTimeNullableFilter | DateTime | Null,\n?   EndDate?: DateTimeNullableFilter | DateTime | Null,\n?   like?: LikeListRelationFilter,\n?   users?: UsersNullableRelationFilter | usersWhereInput | Null\n  }\n}\n\nArgument `where` of type noticesWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?."}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n+ data: noticesUpdateInput | noticesUncheckedUpdateInput\n}\n\nArgument `data` is missing."}
{"level":"error","message":"\nInvalid `prisma.notices.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n  data: {\n    subject: {},\n    contents: {}\n  }\n}\n\nInvalid value for argument `cancel`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it."}
{"level":"error","message":"\"[object Object]\" is not valid JSON"}
{"level":"error","message":"data is not defined"}
{"level":"error","message":"req is not defined"}
{"level":"error","message":"req.json is not a function"}
{"level":"error","message":"req.json is not a function"}
